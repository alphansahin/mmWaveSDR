-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\detector\slicer.vhd
-- Created: 2022-09-01 15:45:31
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: slicer
-- Source Path: detector/detector/slicer
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.detector_pkg.ALL;

ENTITY slicer IS
  PORT( inputI                            :   IN    std_logic_vector(127 DOWNTO 0);  -- ufix128
        inputQ                            :   IN    std_logic_vector(127 DOWNTO 0);  -- ufix128
        outputI                           :   OUT   vector_of_std_logic_vector12(0 TO 7);  -- sfix12 [8]
        outputQ                           :   OUT   vector_of_std_logic_vector12(0 TO 7)  -- sfix12 [8]
        );
END slicer;


ARCHITECTURE rtl OF slicer IS

  -- Signals
  SIGNAL inputI_unsigned                  : unsigned(127 DOWNTO 0);  -- ufix128
  SIGNAL inputQ_unsigned                  : unsigned(127 DOWNTO 0);  -- ufix128
  SIGNAL outputI_tmp                      : vector_of_signed12(0 TO 7);  -- sfix12 [8]
  SIGNAL outputQ_tmp                      : vector_of_signed12(0 TO 7);  -- sfix12 [8]

BEGIN
  inputI_unsigned <= unsigned(inputI);

  inputQ_unsigned <= unsigned(inputQ);

  slicer_1_output : PROCESS (inputI_unsigned, inputQ_unsigned)
    VARIABLE outputIu : vector_of_unsigned12(0 TO 7);
    VARIABLE outputQu : vector_of_unsigned12(0 TO 7);
  BEGIN
    outputIu(0) := inputI_unsigned(11 DOWNTO 0);
    outputQu(0) := inputQ_unsigned(11 DOWNTO 0);
    outputIu(1) := inputI_unsigned(27 DOWNTO 16);
    outputQu(1) := inputQ_unsigned(27 DOWNTO 16);
    outputIu(2) := inputI_unsigned(43 DOWNTO 32);
    outputQu(2) := inputQ_unsigned(43 DOWNTO 32);
    outputIu(3) := inputI_unsigned(59 DOWNTO 48);
    outputQu(3) := inputQ_unsigned(59 DOWNTO 48);
    outputIu(4) := inputI_unsigned(75 DOWNTO 64);
    outputQu(4) := inputQ_unsigned(75 DOWNTO 64);
    outputIu(5) := inputI_unsigned(91 DOWNTO 80);
    outputQu(5) := inputQ_unsigned(91 DOWNTO 80);
    outputIu(6) := inputI_unsigned(107 DOWNTO 96);
    outputQu(6) := inputQ_unsigned(107 DOWNTO 96);
    outputIu(7) := inputI_unsigned(123 DOWNTO 112);
    outputQu(7) := inputQ_unsigned(123 DOWNTO 112);

    FOR t_0 IN 0 TO 7 LOOP
      outputI_tmp(t_0) <= signed(outputIu(t_0));
      outputQ_tmp(t_0) <= signed(outputQu(t_0));
    END LOOP;

  END PROCESS slicer_1_output;


  outputgen1: FOR k IN 0 TO 7 GENERATE
    outputI(k) <= std_logic_vector(outputI_tmp(k));
  END GENERATE;

  outputgen: FOR k IN 0 TO 7 GENERATE
    outputQ(k) <= std_logic_vector(outputQ_tmp(k));
  END GENERATE;

END rtl;

