-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\rxPacketGenerator\rxPacketGenerator.vhd
-- Created: 2022-11-23 23:55:15
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1
-- Target subsystem base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- m_tdata_re                    ce_out        1
-- m_tvalid_re                   ce_out        1
-- m_tlast_re                    ce_out        1
-- m_tdata_im                    ce_out        1
-- m_tvalid_im                   ce_out        1
-- m_tlast_im                    ce_out        1
-- s_tready_re                   ce_out        1
-- s_tready_im                   ce_out        1
-- data_re                       ce_out        1
-- data_im                       ce_out        1
-- numberOfTransfers             ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: rxPacketGenerator
-- Source Path: rxPacketGenerator/rxPacketGenerator
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY rxPacketGenerator IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        mode                              :   IN    std_logic;  -- ufix1
        transferSize                      :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        softTrigger                       :   IN    std_logic;  -- ufix1
        s_tdata_re                        :   IN    std_logic_vector(127 DOWNTO 0);  -- ufix128
        s_tvalid_re                       :   IN    std_logic;  -- ufix1
        m_tready_re                       :   IN    std_logic;  -- ufix1
        s_tdata_im                        :   IN    std_logic_vector(127 DOWNTO 0);  -- ufix128
        s_tvalid_im                       :   IN    std_logic;  -- ufix1
        m_tready_im                       :   IN    std_logic;  -- ufix1
        detectorTrigger                   :   IN    std_logic;  -- ufix1
        resetNumberOfTransfersCounter     :   IN    std_logic;  -- ufix1
        transfersEnable                   :   IN    std_logic;  -- ufix1
        fifoCounter                       :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        stopCounter                       :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        ce_out                            :   OUT   std_logic;
        m_tdata_re                        :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
        m_tvalid_re                       :   OUT   std_logic;
        m_tlast_re                        :   OUT   std_logic;
        m_tdata_im                        :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
        m_tvalid_im                       :   OUT   std_logic;
        m_tlast_im                        :   OUT   std_logic;
        s_tready_re                       :   OUT   std_logic;
        s_tready_im                       :   OUT   std_logic;
        data_re                           :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
        data_im                           :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
        numberOfTransfers                 :   OUT   std_logic_vector(31 DOWNTO 0)  -- uint32
        );
END rxPacketGenerator;


ARCHITECTURE rtl OF rxPacketGenerator IS

  -- Component Declarations
  COMPONENT fsm
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          mode                            :   IN    std_logic;  -- ufix1
          softTrigger                     :   IN    std_logic;  -- ufix1
          transferEnable                  :   IN    std_logic;  -- ufix1
          transferSize                    :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
          resetNumberOfTransfersCounter   :   IN    std_logic;  -- ufix1
          fifoCounter                     :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          stopCounter                     :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          detectorTrigger                 :   IN    std_logic;  -- ufix1
          s_tdata_re                      :   IN    std_logic_vector(127 DOWNTO 0);  -- ufix128
          s_tvalid_re                     :   IN    std_logic;  -- ufix1
          m_tready_re                     :   IN    std_logic;  -- ufix1
          s_tdata_im                      :   IN    std_logic_vector(127 DOWNTO 0);  -- ufix128
          s_tvalid_im                     :   IN    std_logic;  -- ufix1
          m_tready_im                     :   IN    std_logic;  -- ufix1
          m_tdata_re                      :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
          m_tvalid_re                     :   OUT   std_logic;
          m_tlast_re                      :   OUT   std_logic;
          m_tdata_im                      :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
          m_tvalid_im                     :   OUT   std_logic;
          m_tlast_im                      :   OUT   std_logic;
          s_tready_re                     :   OUT   std_logic;
          s_tready_im                     :   OUT   std_logic;
          data_re                         :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
          data_im                         :   OUT   std_logic_vector(127 DOWNTO 0);  -- ufix128
          numberOfTransfers               :   OUT   std_logic_vector(31 DOWNTO 0)  -- uint32
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : fsm
    USE ENTITY work.fsm(rtl);

  -- Signals
  SIGNAL m_tdata_re_tmp                   : std_logic_vector(127 DOWNTO 0);  -- ufix128
  SIGNAL m_tdata_im_tmp                   : std_logic_vector(127 DOWNTO 0);  -- ufix128
  SIGNAL data_re_tmp                      : std_logic_vector(127 DOWNTO 0);  -- ufix128
  SIGNAL data_im_tmp                      : std_logic_vector(127 DOWNTO 0);  -- ufix128
  SIGNAL numberOfTransfers_tmp            : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  u_fsm : fsm
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              mode => mode,  -- ufix1
              softTrigger => softTrigger,  -- ufix1
              transferEnable => transfersEnable,  -- ufix1
              transferSize => transferSize,  -- uint16
              resetNumberOfTransfersCounter => resetNumberOfTransfersCounter,  -- ufix1
              fifoCounter => fifoCounter,  -- uint32
              stopCounter => stopCounter,  -- uint32
              detectorTrigger => detectorTrigger,  -- ufix1
              s_tdata_re => s_tdata_re,  -- ufix128
              s_tvalid_re => s_tvalid_re,  -- ufix1
              m_tready_re => m_tready_re,  -- ufix1
              s_tdata_im => s_tdata_im,  -- ufix128
              s_tvalid_im => s_tvalid_im,  -- ufix1
              m_tready_im => m_tready_im,  -- ufix1
              m_tdata_re => m_tdata_re_tmp,  -- ufix128
              m_tvalid_re => m_tvalid_re,
              m_tlast_re => m_tlast_re,
              m_tdata_im => m_tdata_im_tmp,  -- ufix128
              m_tvalid_im => m_tvalid_im,
              m_tlast_im => m_tlast_im,
              s_tready_re => s_tready_re,
              s_tready_im => s_tready_im,
              data_re => data_re_tmp,  -- ufix128
              data_im => data_im_tmp,  -- ufix128
              numberOfTransfers => numberOfTransfers_tmp  -- uint32
              );

  ce_out <= clk_enable;

  m_tdata_re <= m_tdata_re_tmp;

  m_tdata_im <= m_tdata_im_tmp;

  data_re <= data_re_tmp;

  data_im <= data_im_tmp;

  numberOfTransfers <= numberOfTransfers_tmp;

END rtl;

