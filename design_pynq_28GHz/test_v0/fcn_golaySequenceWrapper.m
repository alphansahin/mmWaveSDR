% IDDC
% Alphan Sahin, 2016
% L is the length of the sequence
% i is the stream index
% method can be {'Budisin', 'HardCoded'}

function [Ga, Gb] = fcn_golaySequenceWrapper(L, i, method)
    if strcmp(method, 'Budisin') 
        if i == 0
        	switch L
                case 32
                    w = [-1 1 -1 1 -1];
                    d = [1 4 8 2 16];
                case 64
                    w = [1 1 -1 -1 1 -1];
                    d = [2 1 4 8 16 32];
                case 128
                    w = [-1 -1 -1 -1 1 -1 -1];
                    d = [1 8 2 4 16 32 64];
            end 
        else
            switch L
                case 128
                    d = [1 8 2 4 16 32 64];
                    W = [[-1,-1,-1,-1,+1,-1,-1];...
                        [+1,-1,-1,-1,+1,-1,-1];...
                        [-1,-1,-1,+1,-1,-1,+1];...
                        [+1,-1,-1,+1,-1,-1,+1];...
                        [-1,-1,-1,+1,-1,+1,+1];...
                        [+1,-1,-1,+1,-1,+1,+1];...
                        [-1,-1,-1,+1,+1,+1,-1];...
                        [+1,-1,-1,+1,+1,+1,-1]];
                case 256
                    d = [1 8 2 4 16 32 64 128];
                    W = [[-1,-1,-1,-1,+1,-1,-1,+1];...
                        [+1,-1,-1,-1,+1,-1,-1,+1];...
                        [-1, -1, -1,+1,-1,-1,+1,-1];...
                        [+1, -1, -1,+1,-1,-1,+1,-1];...
                        [-1,-1,-1,+1,-1,+1,+1,-1];...
                        [+1,-1,-1,+1,-1,+1,+1,-1];...
                        [-1,-1,-1,+1,+1,+1,-1,-1];...
                        [+1,-1,-1,+1,+1,+1,-1,-1]];
                case 512
                    d = [1 8 2 4 16 32 64 128 256];
                    W = [[-1,-1,-1,-1,+1,-1,-1,+1,+1];...
                        [+1,-1,-1,-1,+1,-1,-1,+1,+1];...
                        [-1,-1,-1,-1,-1,-1,-1,-1,-1];...
                        [+1,-1,-1,-1,-1,-1,-1,-1,-1];...
                        [-1,-1,-1,-1,-1,+1,-1,-1,-1];...
                        [+1,-1,-1,-1,-1,+1,-1,-1,-1];...
                        [-1,-1,-1,-1,+1,-1,-1,-1,+1];...
                        [+1,-1,-1,-1,+1,-1,-1,-1,+1]];...
                case 96
                    d = [3 24 6 12 48];
                    W = [[-1,-1,-1,-1,+1];...
                        [-1,-1,-1,+1,-1];...
                        [-1,-1,+1,-1,-1];...
                        [-1,-1,+1,+1,-1]];
                    W = upsample(W,2)+circshift(upsample(W,2),[1,0]);
                case 192
                    d = [3 24 6 12 48 96];
                    W = [[-1,-1,-1,-1,+1,+1];...
                         [-1,-1,-1,+1,-1,+1];...
                         [-1,-1,+1,-1,-1,+1];...
                         [-1,-1,+1,+1,-1,+1]];
                    W = upsample(W,2)+circshift(upsample(W,2),[1,0]);
                case 384
                    d = [3 24 6 12 48 96 192];
                    W = [[-1,-1,-1,-1,+1,-1,-1];...
                         [-1,-1,-1,+1,-1,-1,+1];...
                         [-1,-1,-1,+1,-1,+1,+1];...
                         [-1,-1,-1,+1,+1,+1,-1]];
                    W = upsample(W,2)+circshift(upsample(W,2),[1,0]);
            end 
            w = W(i,:);
            d = d;
        end
        [Ga, Gb] = fcn_golaySequenceBudisinMethod(w, d, i);
    elseif strcmp(method, 'HardCoded') 
      	[Ga, Gb] = fcn_golaySequenceHardCoded(L, i);
    end
end